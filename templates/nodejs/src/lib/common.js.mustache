{{#dependencies.express.express-jwt}}
const config = require('../config/config')
const jwt = require('jsonwebtoken')
const { AuthenticateError } = require('../lib/app-error')
/**
 * Return member info packaged at jwt sign
 * @param {object} req - the request info
 */
function getUserInfoFromToken (req) {
  const auth = req.get(config.jwt.headerName)
  if (!auth) return Promise.reject(new AuthenticateError())

  const jwtObj = jwt.verify(auth.substr(7), config.jwt.secretKey)
  return Promise.resolve(jwtObj)
}
{{/dependencies.express.express-jwt}}

/**
 * Get integer hash value for string
 * @param {string} str - the string convert to hash number
 */
function hashCode (str) {
  let hash = 0
  if (str.length === 0) return hash
  for (let i = 0; i < str.length; i++) {
    const char = str.charCodeAt(i)
    hash = ((hash << 5) - hash) + char
    hash = hash & hash // Convert to 32bit integer
  }
  return Math.abs(hash)
}

module.exports = {
  {{#dependencies.express.express-jwt}}
  getUserInfoFromToken,
  {{/dependencies.express.express-jwt}}
  hashCode
}
