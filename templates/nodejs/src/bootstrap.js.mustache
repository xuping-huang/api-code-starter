/**
 * Initialize application
 */

global.Promise = require('bluebird')
const config = require('config')
const fs = require('fs')
const Joi = require('joi')
const path = require('path')
const logger = require('./lib/logger')

/**
 * Define multiple Joi validation common methods
 */

Joi.page = () => Joi.number().integer().min(1).default(1)
Joi.perPage = () => Joi.number().integer().min(1).max(config.PAGE.PER_PAGE_MAX)
Joi.boolTransform = () => Joi.boolean().insensitive().truthy('yes').truthy('y').truthy('t').truthy('true').falsy('no').falsy('n').falsy('f').falsy('false')
Joi.sortOrder = () => Joi.string().valid('asc', 'desc', 'ASC', 'DESC').default('asc')
Joi.stringLower = () => Joi.string().trim().lowercase()

/**
 * Logging when entering and exiting a service method.
 * @param {Path} dir - the path to the service folder
 */
function buildServices (dir) {
  const files = fs.readdirSync(dir)

  files.forEach((file) => {
    const curPath = path.join(dir, file)
    fs.stat(curPath, (err, stats) => {
      if (err) return
      if (stats.isDirectory()) {
        buildServices(curPath)
      } else if (path.extname(file) === '.js') {
        logger.buildService(require(curPath)); // eslint-disable-line
      }
    })
  })
}

buildServices(path.join(__dirname, 'service'))
