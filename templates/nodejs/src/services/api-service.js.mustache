const debug = require('debug')('api:api-service')
const { NotFoundError, InternalServerError, DBError } = require('../lib/app-error')
const SampleModel = require('../models/sample-model')

module.exports.sampleService = async (options) => {
  try {
{{#projectStyle.db.isNeo4j}}
    const records = await SampleModel.findById(options.userId)
{{/projectStyle.db.isNeo4j}}
{{#projectStyle.db.isJsonDB}}
    const records = await SampleModel.findById(options.userId)
{{/projectStyle.db.isJsonDB}}
{{#projectStyle.db.isMongoDB}}
    const records = await SampleModel.findOne({ userId: options.userId })
{{/projectStyle.db.isMongoDB}}
    if (records && records.length > 1) {
      return Promise.reject(new InternalServerError('Too many records be found'))
    }
    if (!records || records.length === 0) {
      return Promise.reject(new NotFoundError('Model not found by the ID'))
    }
    return Promise.resolve(records)
  } catch (err) {
    debug('err: %s', JSON.stringify(err))
    return Promise.reject(new DBError(err))
  }
}
