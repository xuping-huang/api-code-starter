# {{project.description}} Verification
{{#projectStyle.auth.needPassword}}

## Login Account

- username: `jason`
- passowrd: `123456`
{{/projectStyle.auth.needPassword}}

## Setup

1. Install NPM dependencies

```
npm i
```

2. Set up the environment variables or use defined default value

```
{{#projectStyle.db.isDynamoDB}}
export AWS_ACCESS_KEY_ID="AWS access key id"
export AWS_SECRET_ACCESS_KEY="AWS secret access key"
export AWS_REGION="AWS region"
export AWS_IS_LOCAL="true/false"
export AWS_DYNAMODB_ENDPOINT="dynamodb endpoint (required when is_local=true)"
{{/projectStyle.db.isDynamoDB}}
{{#projectStyle.db.isSqlite}}
DATABASE_USERNAME: "database access account",
DATABASE_PASSWORD: "database access account password",
DATABASE_POOL_MAX: "database connection pool max",
{{/projectStyle.db.isSqlite}}
{{#projectStyle.db.isPostgres}}
DATABASE_USERNAME: "database access account",
DATABASE_PASSWORD: "database access account password",
DATABASE_POOL_MAX: "database connection pool max",
DATABASE_URL: "database link",
DATABASE_NAME: "database name"
{{/projectStyle.db.isPostgres}}
{{#projectStyle.db.isMysql}}
DATABASE_USERNAME: "database access account",
DATABASE_PASSWORD: "database access account password",
DATABASE_POOL_MAX: "database connection pool max",
DATABASE_URL: "database link",
DATABASE_NAME: "database name"
{{/projectStyle.db.isMysql}}
{{#projectStyle.db.isMariadb}}
DATABASE_USERNAME: "database access account",
DATABASE_PASSWORD: "database access account password",
DATABASE_POOL_MAX: "database connection pool max",
DATABASE_URL: "database link",
DATABASE_NAME: "database name"
{{/projectStyle.db.isMariadb}}
{{#projectStyle.db.isMssql}}
DATABASE_USERNAME: "database access account",
DATABASE_PASSWORD: "database access account password",
DATABASE_POOL_MAX: "database connection pool max",
DATABASE_URL: "database link",
DATABASE_NAME: "database name"
{{/projectStyle.db.isMssql}}
{{#projectStyle.db.isMongoDB}}
DATABASE_USERNAME: "database access account",
DATABASE_PASSWORD: "database access account password",
DATABASE_POOL_MAX: "database connection pool max",
{{/projectStyle.db.isMongoDB}}
{{#projectStyle.db.isNeo4j}}
DATABASE_USERNAME: "database access account",
DATABASE_PASSWORD: "database access account password",
DATABASE_POOL_MAX: "database connection pool max",
DATABASE_URL: "database url",
DATABASE_NAME: "database name",
{{/projectStyle.db.isNeo4j}}
{{#dependencies.other.nodemailer}}
EMAIL_SERVER_ACCOUNT: "email server access account",
EMAIL_SERVER_PASSWORD: "email server access account password",
EMAIL_SERVER_HOST: "email server host address",
EMAIL_SERVER_HOST_PORT: "email server port",
EMAIL_FROM: "email sender address",
{{/dependencies.other.nodemailer}}
```

3. Modify the other configuration variables if necessary in `config/default.js`

4. Database initialize
  {{#projectStyle.db.isMysql}}

**Note**: If you want the table name to be created after it is displayed to be case-sensitive, set the `lower_case_table_names=2` and restart the Mysql engine. Not setting this parameter will only affect the display effect and does not affect the application running.
  {{/projectStyle.db.isMysql}}
  {{#projectStyle.db.isMssql}}
  {{/projectStyle.db.isMssql}}
  {{#projectStyle.db.isMariadb}}

**Note**: If you want the table name to be created after it is displayed to be case-sensitive, set the `lower_case_table_names=2` and restart the Mysql engine. Not setting this parameter will only affect the display effect and does not affect the application running.
  {{/projectStyle.db.isMariadb}}
  {{#projectStyle.db.isPostgres}}
  {{/projectStyle.db.isPostgres}}
  {{#projectStyle.db.isSqlite}}
  {{/projectStyle.db.isSqlite}}
  {{#projectStyle.db.isDynamoDB}}
  {{/projectStyle.db.isDynamoDB}}

Initialize the data of database tables by running the script

```
npm run create-tables
npm run init-data
```

## Postman verification

1. Open Postman

2. Import Postman Environment and Collection from `doc` directory

3. Reintialize the data if need

  ```
  npm run init-data
  ```

4. Run the application

  ```
  npm run start
  ```

5. Running Test Case in Postman
  **Note**: Some test case have order prefix, do not change the running order please.

{{#projectStyle.test.unitTest}}
## Unit tests and Integration tests
{{#projectStyle.other.needElasticSearch}}

Integration tests may use different index `member-test` which may not same as the usual index.

Please ensure to create the index `member-test` or the index specified in the environment variable `ES_INDEX_TEST` before running the Integration tests. You could re-use the existing scripts to create index but you would need to set the below environment variable

```
export ES_INDEX=member-test
```
{{/projectStyle.other.needElasticSearch}}

### Running unit tests{{#projectStyle.test.needCoverage}} and coverage{{/projectStyle.test.needCoverage}}

To run unit tests

```
npm run test
```
{{#projectStyle.test.needCoverage}}

To run unit tests with coverage report

```
npm run cov
```
{{/projectStyle.test.needCoverage}}
{{/projectStyle.test.unitTest}}

{{#projectStyle.test.e2eTest}}
### Running integration tests{{#projectStyle.test.needCoverage}} and coverage{{/projectStyle.test.needCoverage}}

To run integration tests alone

```
npm run e2e
```
{{#projectStyle.test.needCoverage}}

To run integration tests with coverage report

```
npm run cov-e2e
```
{{/projectStyle.test.needCoverage}}
{{/projectStyle.test.e2eTest}}
{{#projectStyle.test.needCoverage}}

## Test Reports

### E2E Test

  298 passing (55s)

File                     |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |
-------------------------|----------|----------|----------|----------|-------------------|
All files                |    91.24 |    81.11 |    88.37 |    92.48 |                   |


### Unit Test

  188 passing (7s)

File                     |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |
-------------------------|----------|----------|----------|----------|-------------------|
All files                |    85.11 |    79.29 |    80.65 |       88 |                   |
{{/projectStyle.test.needCoverage}}
