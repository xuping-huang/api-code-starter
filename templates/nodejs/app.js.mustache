{{#projectStyle.db.isMongoDB}}
const debug = require('debug')('api:app')
{{#dependencies.db.mongoose}}
const mongoose = require('mongoose')
const { inspect } = require('util')
{{/dependencies.db.mongoose}}
{{^dependencies.logger.bunyan}}
const config = require('./src/config/config')
{{/dependencies.logger.bunyan}}
{{/projectStyle.db.isMongoDB}}
const { app } = require('./app-middleware')
{{#apiStyle.log.needLog}}
{{#dependencies.logger.bunyan}}
const config = require('./src/config/config')
const log = require('./src/lib/logger')

const logger = log(config.logger)
{{/dependencies.logger.bunyan}}
{{/apiStyle.log.needLog}}
{{#projectStyle.db.isMongoDB}}
{{#dependencies.db.mongoose}}

/**
 * Connect to MongoDB.
 */
mongoose.set('useFindAndModify', false)
mongoose.set('useCreateIndex', true)
mongoose.set('useNewUrlParser', true)
mongoose.connect(config.db.url, {
  keepAlive: 120
})
mongoose.connection.on('error', (err) => {
  {{#dependencies.logger.morgan}}
  console.error(err)
  console.log('MongoDB connection error. Please make sure MongoDB is running.')
  {{/dependencies.logger.morgan}}
  {{#dependencies.logger.bunyan}}
  logger.error(err)
  logger.info('MongoDB connection error. Please make sure MongoDB is running.')
  {{/dependencies.logger.bunyan}}
  process.exit()
})

// print mongoose logs in dev env
if (config.isDebug) {
  mongoose.set('debug', (collectionName, method, query, doc) => {
    debug(`${collectionName}.${method}`, inspect(query, false, 20), doc)
  })
}
{{/dependencies.db.mongoose}}
{{/projectStyle.db.isMongoDB}}
/**
 * Start server.
 */
app.listen(app.get('port'), () => {
  {{#dependencies.logger.morgan}}
  console.log('App is running at http://localhost:%d in %s mode', app.get('port'), app.get('env'))
  console.log('  Press CTRL-C to stop\n')
  {{/dependencies.logger.morgan}}
  {{#dependencies.logger.bunyan}}
  logger.info('App is running at http://localhost:%d in %s mode', app.get('port'), app.get('env'))
  logger.info('  Press CTRL-C to stop\n')
  {{/dependencies.logger.bunyan}}
})

module.exports = app
