# {{project.description}}

## Project prerequisites

- nodejs https://nodejs.org/en/ (v10)
- Docker, Docker Compose
{{#projectStyle.db.isDynamoDB}}
- DynamoDB
{{/projectStyle.db.isDynamoDB}}

## Configuration

Configuration for the application is at `config/default.js`.
The following parameters can be set in config files or in env variables:

- LOG_LEVEL: the log level, default is 'debug'
- LOG.LOGGER_DIR: the directory stored in logs
- LOG.LOGGER_FILE: the log file name
- PORT: the server port, default is 3000
- SECURE_PORT: the secure server port, default is 443
  {{#projectStyle.auth.needJwt}}
- AUTH_SECRET: The authorization secret used during token verification.
- VALID_ISSUERS: The valid issuer of tokens.
  {{/projectStyle.auth.needJwt}}
  {{#projectStyle.auth.needM2M}}
  {{/projectStyle.auth.needM2M}}
  {{#projectStyle.db.isDynamoDB}}
- DYNAMODB.AWS_ACCESS_KEY_ID: The Amazon certificate key to use when connecting. Use local dynamodb you can set fake value
- DYNAMODB.AWS_SECRET_ACCESS_KEY: The Amazon certificate access key to use when connecting. Use local dynamodb you can set fake value
- DYNAMODB.AWS_REGION: The Amazon certificate region to use when connecting. Use local dynamodb you can set fake value
- DYNAMODB.IS_LOCAL: Use Amazon DynamoDB Local or server.
- DYNAMODB.AWS_DYNAMODB_ENDPOINT: The local url if using Amazon DynamoDB Local
  {{/projectStyle.db.isDynamoDB}}
- PAGE.PERPAGE_DEFAULT: the default page size
- PAGE.PER_PAGE_MAX: the max page size

{{#projectStyle.db.isDynamoDB}}
## DynamoDB Setup with Docker
We will use DynamoDB setup on Docker.

Just run `docker-compose up` in docker folder. When Docker startup is complete, the table has been created in the database.

If you have already installed aws-cli in your local machine, you can use following command to verify. If not you can still verify table created following `Verify Table via awscli in Docker`.
```
aws dynamodb list-tables --endpoint-url http://localhost:8000
```

## Verify Table via awscli in Docker
1. Make sure DynamoDB are running as per instructions above.

2. Run the following commands
```
docker exec -ti dynamodb-cli sh
```
Next
```
aws dynamodb list-tables --endpoint-url http://dynamodb:8000
```
**Note:** The `endpoint-url` should be `http://dynamodb:8000`.

{{/projectStyle.db.isDynamoDB}}
## Local Deployment

- Install dependencies `npm install`
- Run lint `npm run lint`
- Run lint fix `npm run lint:fix`
- Start app `npm start`
- App is running at `http://localhost:3000`
- Clear and init db `npm run cleanData`
- Insert test data `npm run initData`
- Run unit test `npm run test`
- Run e2e test `npm run e2e`
- Generate coverage report for unit test `npm run cov`
- Generate coverage report for e2e test `npm run cov-e2e`

## Verification
Refer to the verification document `Verification.md`
