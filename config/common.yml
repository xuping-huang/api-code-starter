defaults: &defaults # default use json-db,express,javascript
  project:
    name: project-name
    version: 0.0.1
    description: Project Name
    port: 3000
    module: users
    basePath: '/v5'
    templateSwitch: nodejs
  projectStyle:
    language:
      name: JavaScript
      isJavaScript: false
      isTypeScript: false
      isJava: false
    server:
      name: Express
      isExpress: true
      isKoa: false
    db:
      name: DynamoDB
      isJsonDB: false
      isMongoDB: false
      isNeo4j: false
      isMysql: false
      isSqlite: false
      isDynamoDB: false
      isPostgres: false
      isMariadb: false
      isMssql: false
    orm:
      isSequelize: false
    log:
      needLog: true
    test:
      unitTest: false
      e2eTest: false
      needCoverage: false
      needMockApi: false
    auth:
      needJwt: false
      needM2M: false
      needPassword: false
    lint:
      isAribnbBase: false
      isESlingStandard: false
      isESlintRecommended: false
    deploy:
      useDocker: true
      useHeroku: false
    doc:
      needOpt: false
      isSwaggerDoc: false
    maven:
      groupId: ''
    other:
      needHealthCheck: false
      needTwilio: false
      needAws: false
      needGootleText2Speech: false
      needErrorEmail: false
      needHttps: false
      needKafka: false
      needElasticSearch: false
    date:
      isThreeTenbp: false
      isJava8: false
      isJoda: false
  devDependencies:
    codeStyle:
      standard: true
      tslint: false
      eslint: false
      eslint-config-airbnb-base: false
      eslint-chai-friendly: false
      babel-eslint: false
      eslint-config-standard: false
      eslint-plugin-node: false
      eslint-plugin-import: false
      eslint-plugin-promise: false
      eslint-plugin-standard: false
    test:
      mocha: false
      jest: false
      should: false
    coverage:
      nyc: false # Istanbul's state of the art command line interface
    other:
      nodemon: true # if false, becareful devDependencies has a extend comma
  dependencies:
    config:
      config: true # load .env
    logger:
      winston: true
      morgan: true # logger
      bunyan: false
      get-parameter-names: true
    validate:
      joi: true
      validator: false
    secure:
      auth0-js: false
      bcryptjs: false
      http: true
      https: false
      jwks-rsa: false
      express-jwt-authz: false
      jsonwebtoken: false
      express-jwt: false
      tc-core-library-js: false
    db:
      json-file-db: false
      mongoose: false
      neo4j-driver: false
      aws-sdk: false
      sequelize: false
      sqlite3: false
      postgres: false
    express:
      express: true
      express-status-monitor: false # monitor express status
      compression: true # compress http response & request
      body-parser: true
      express-validator: false
      cors: true # enable CORS with various options.
      helmet: true # secure Express/Connect apps with various HTTP headers
      multer: true # Middleware for handling `multipart/form-data
      express-fileupload: false
      express-interceptor: true
    other:
      http-status: true
      uuid: true
      swagger-jsdoc: false
      debug: true
      bluebird: true
      merge-deep: true
      pagination: true
      lodash: true
      config: true
      nodemailer: false
      moment: true
      superagent: false
    spring:
      spring-fox: false
      otp-aerogera: false
test:
  projectStyle:
    test:
      unitTest: true
      e2eTest: true
  dependencies:
    other:
      superagent: true
  devDependencies:
    test:
      mocha: true
      should: true
cov:
  projectStyle:
    test:
      needCoverage: true
  devDependencies:
    coverage:
      nyc: true
eslint:
  projectStyle:
    lint:
      isESlingStandard: true
  devDependencies:
    codeStyle:
      eslint: true
      eslint-config-airbnb-base: true
      eslint-chai-friendly: true
      babel-eslint: true
      eslint-config-standard: true
      eslint-plugin-node: true
      eslint-plugin-import: true
      eslint-plugin-promise: true
      eslint-plugin-standard: true
tslint:
  devDependencies:
    codeStyle:
      tslint: true
      tslint-config-prettier: true
      tslint-immutable: true
heroku:
  projectStyle:
    deploy:
      useDocker: false
      useHeroku: true
swgdoc:
  projectStyle:
    doc:
      isSwaggerDoc: true
  dependencies:
    other:
      swagger-jsdoc: true
koa:
  projectStyle:
    server:
      name: koa
      isExpress: false
      isKoa: true
jwt:
  projectStyle:
    auth:
      needJwt: true
  dependencies:
    secure:
      express-jwt: true
      jsonwebtoken: true
tcjwt:
  projectStyle:
    auth:
      needJwt: true
  dependencies:
    secure:
      express-jwt: true
      jsonwebtoken: true
      tc-core-library-js: true
m2m:
  projectStyle:
    auth:
      needM2M: true
  dependencies:
    express:
      express-jwt: true
    secure:
      auth0-js: true
      express-jwt-authz: true
      jwks-rsa: true
pwd:
  projectStyle:
    auth:
      needPassword: true
salt:
  projectStyle:
    auth:
      needPassword: true
  dependencies:
    secure:
      bcryptjs: true
aws:
  projectStyle:
    other:
      needAws: true
  dependencies:
    db:
      aws-sdk: true
twilio:
  projectStyle:
    other:
      needTwilio: true
  dependencies:
    other:
      twilio: true
kafka:
  projectStyle:
    other:
      needKafka: true
es:
  projectStyle:
    other:
      needElasticSearch: true
https:
  projectStyle:
    other:
      needHttps: true
file:
  dependencies:
    express:
      express-fileupload: true
xlsx:
  dependencies:
    other:
      xlsx: true
email:
  dependencies:
    other:
      nodemailer: true
nopage:
  dependencies:
    other:
      pagination: false
mockapi:
  projectStyle:
    test:
      needMockApi: true
#### DB
jsondb:
  projectStyle:
    db:
      name: JSON-DB
      isJsonDB: true
  devDependencies:
    test:
      sinon-mongoose: false
  dependencies:
    db:
      json-file-db: true
neo4j:
  projectStyle:
    db:
      name: Neo4j
      isNeo4j: true
  dependencies:
    db:
      neo4j-driver: true
mongo:
  projectStyle:
    db:
      name: MongoDB
      isMongoDB: true
  dependencies:
    db:
      mongoose: true
dynamo:
  projectStyle:
    db:
      name: DynamoDB
      isDynamoDB: true
  dependencies:
    db:
      aws-sdk: true
    other:
      bluebird: true
      merge-deep: true
mysql:
  projectStyle:
    db:
      name: Mysql
      isMysql: true
    orm:
      isSequelize: true
  dependencies:
    db:
      sequelize: true
      mysql2: true
mariadb:
  projectStyle:
    db:
      name: Mariadb
      isMariadb: true
    orm:
      isSequelize: true
  dependencies:
    db:
      sequelize: true
      mariadb: true
sqlite:
  projectStyle:
    db:
      name: SQLite
      isSqlite: true
    orm:
      isSequelize: true
  dependencies:
    db:
      sequelize: true
      sqlite3: true
postgres:
  projectStyle:
    db:
      name: PostgreSQL
      isPostgres: true
    orm:
      isSequelize: true
  dependencies:
    db:
      sequelize: true
      pg: true
      pg-hstore: true
mssql:
  projectStyle:
    db:
      name: Microsoft SQL Server
      isMssql: true
    orm:
      isSequelize: true
  dependencies:
    db:
      sequelize: true
      tedious : true
## Language
typescript:
  projectStyle:
    language:
      name: TypeScript
      isTypeScript: true
javascript:
  projectStyle:
    language:
      name: JavaScript
      isJavaScript: true
spring:
  project:
    templateSwitch: spring
  projectStyle:
    language:
      name: Java
      isJava: true
    maven:
      groupId: com.autocognita
    log:
      needLog: true

## Required
name:
  project:
    name: ddmt-api
    description: DDMT API
