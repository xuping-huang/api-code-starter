defaults: &defaults # default use json-db,express,javascript
  project:
    name: autocognita-api
    version: 0.0.1
    description: Generate api code start kit for mongo db.
    port: 3000
    module: users
    basePath: ''
    templateSwitch: nodejs
  projectStyle:
    language:
      name: JavaScript
      isJavaScript: true
      isTypeScript: false
      isJava: false
    server:
      name: Express
      isExpress: true
      isKoa: false
    db:
      name: JSON-DB
      isJsonDB: true
      isMongoDB: false
      isNeo4j: false
      isMysql: false
    deploy:
      useDocker: true
      useHeroku: false
  apiStyle:
    log:
      needLog: true
      needTest: true
      needCoverage: false
    other:
      needHealthCheck: false
      needJwt: false
      needPasswordBcrypt: false
      needTwilio: true
      needAws: true
      needGootleText2Speech: true
    lint:
      isAribnbBase: true
      isESlingStandard: false
      isESlintRecommended: false
    doc:
      isSwaggerDoc: true
    date:
      isThreeTenbp: true
      isJava8: false
      isJoda: false
  devDependencies:
    codeStyle:
      need_tslint: false
      need_eslint: true
      need_eslint_airbnb_base: true
      need_eslint_chai_friendly: true
      need_eslint_plugin_import: true
    test:
      need_chai: false
      need_mocha: false
      need_sinon: false
      need_supertest: false
      need_sinon_mongoose: false
      need_jest: false
    coverage:
      need_nyc: false # Istanbul's state of the art command line interface
    other:
      need_nodemon: true # if false, becareful devDependencies has a extend comma
  dependencies:
    config:
      need_dotenv: true # load .env
    logger:
      need_morgan: true # logger
      need_bunyan: false
    validate:
      need_joi: true
      need_validator: false
    secure:
      need_bcrypt_nodejs: true
      need_crypto: true
    db:
      need_json_file_db: true
      need_mongoose: false
      need_neo4j_driver: false
    express:
      need_express_status_monitor: true # monitor express status
      need_compression: true # compress http response & request
      need_bodyParser: true
      need_expressValidator: true
      need_cors: true # enable CORS with various options.
      need_helmet: true # secure Express/Connect apps with various HTTP headers
      need_lusca: true # Web application security middleware.
      need_express_jwt: true
      need_multer: true # Middleware for handling `multipart/form-data
    other:
      need_http_status: true
      need_error_handle: true
      need_uuid: true
      need_swagger_jsdoc: true
      need_debug: true
    spring:
      need_spring_fox: true
      need_otp_aerogera: true
no-test-cov:
  apiStyle:
    log:
      needTest: false
      needCoverage: false
jsondb:
  projectStyle:
    db:
      name: JSON-DB
      isJsonDB: true
  devDependencies:
    test:
      need_sinon_mongoose: false
  dependencies:
    db:
      need_json_file_db: true
neo4j:
  projectStyle:
    db:
      name: Neo4j
      isJsonDB: false
      isNeo4j: true
  devDependencies:
    test:
      need_sinon_mongoose: false
  dependencies:
    logger:
      need_morgan: true # logger
      need_bunyan: false
    db:
      need_json_file_db: false
      need_neo4j_driver: true
mongo:
  projectStyle:
    db:
      name: MongoDB
      isJsonDB: false
      isMongoDB: true
  dependencies:
    secure:
      need_bcrypt_nodejs: true
      need_crypto: true
    db:
      need_json_file_db: false
      need_mongoose: true
ts:
  projectStyle:
    language:
      name: TypeScript
      isJavaScript: false
      isTypeScript: true
spring:
  project:
    port: 3000
    templateSwitch: spring
  projectStyle:
    language:
      name: Java
      isJavaScript: false
      isTypeScript: false
      isJava: true
    maven:
      groupId: com.autocognita
  apiStyle:
    log:
      needLog: true
    other:
      needJwt: true
      needPasswordBcrypt: true
