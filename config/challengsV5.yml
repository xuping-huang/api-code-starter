defaults: &defaults
  project:
    name: challengs
    basePath: /v5
    host: api.topcoder.com
    templateSwitch: swagger
    needExample: false
  api:
    security:
      isJwt: true
    navigation:
      page: page
      perPage: perPage
      sortOrder: sortOrder
  paths:
    - path: /challengeSettings/{challengeSettingId}
      ops:
      - method: get
        operationId: findChallengeSettingById
        operationName: FindChallengeSettingById
        tag: ChallengeSetting
        noSecurity: false
        needAuth: true
        needFound: true
        needPermission: false
        pathParams:
          - name: challengeSettingId
        needReqBody: false
        needReqBodyRef: false
        needResponseRef: true
        refResponseEntity: ChallengeSetting
        needResponsePageHeader: false
        noResponseContent: false
      - method: put
        operationId: updateChallengeSetting
        tag: ChallengeSetting
        noSecurity: false
        needAuth: true
        needFound: true
        needPermission: true
        pathParams:
          - name: challengeSettingId
        needReqBody: true
        needReqBodyRef: true
        refReqEntity: ChallengeSettingData
        needResponseRef: true
        refResponseEntity: ChallengeSetting
        needResponsePageHeader: false
        noResponseContent: false
    - path: /challengeSettings
      ops:
      - method: get
        operationId: findAllChallengeSettings
        tag: ChallengeSetting
        noSecurity: false
        needAuth: true
        needFound: false
        needPermission: false
        queryParams:
          - name: name
        needReqBody: false
        needReqBodyRef: false
        isList: true
        needNavPage: true
        needResponseRef: true
        refResponseEntity: ChallengeSetting
        needResponsePageHeader: true
        noResponseContent: false
      - method: post
        operationId: createChallengeSetting
        operationName: CreateChallengeSetting
        tag: ChallengeSetting
        noSecurity: false
        needAuth: true
        needFound: false
        needPermission: true
        needReqBody: true
        needReqBodyRef: true
        refReqEntity: ChallengeSettingData
        needResponseRef: true
        refResponseEntity: ChallengeSetting
        needResponsePageHeader: false
        noResponseContent: false
    - path: /challenge/types/{challengeTypeId}
      ops:
      - method: get
        operationId: findChallengeTypeById
        operationName: FindChallengeTypeById
        tag: challenge
        noSecurity: false
        needAuth: true
        needFound: true
        needPermission: false
        pathParams:
          - name: challengeTypeId
        needReqBody: false
        needReqBodyRef: false
        needResponseRef: true
        refResponseEntity: ChallengeType
        needResponsePageHeader: false
        noResponseContent: false
      - method: put
        operationId: updateChallengeType
        tag: challenge
        noSecurity: false
        needAuth: true
        needFound: true
        needPermission: true
        pathParams:
          - name: challengeTypeId
        needReqBody: true
        needReqBodyRef: true
        refReqEntity: ChallengeTypeData
        needResponseRef: true
        refResponseEntity: ChallengeType
        needResponsePageHeader: false
        noResponseContent: false
      - method: patch
        operationId: partialUpdateChallengeType
        tag: ChallengeType
        noSecurity: false
        needAuth: true
        needFound: true
        needPermission: true
        pathParams:
          - name: challengeTypeId
        needReqBody: true
        needReqBodyRef: true
        refReqEntity: ChallengeTypeData
        needResponseRef: true
        refResponseEntity: ChallengeType
        needResponsePageHeader: false
        noResponseContent: false
      - method: delete
        operationId: removeChallengeTypeById
        operationName: RemoveChallengeTypeById
        tag: challenge
        noSecurity: false
        needAuth: true
        needFound: true
        needPermission: true
        pathParams:
          - name: challengeTypeId
        needReqBody: false
        needReqBodyRef: false
        needResponseRef: false
        needResponsePageHeader: false
        noResponseContent: true
    - path: /challenge/types
      ops:
      - method: get
        operationId: findAllChallengeTypes
        tag: ChallengeTypes
        noSecurity: false
        needAuth: true
        needFound: false
        needPermission: false
        queryParams:
          - name: name
          - name: description
          - name: isActive
        needReqBody: false
        needReqBodyRef: false
        isList: true
        needNavPage: true
        needResponseRef: true
        refResponseEntity: ChallengeType
        needResponsePageHeader: true
        noResponseContent: false
      - method: post
        operationId: createChallengeType
        operationName: CreateChallengeType
        tag: ChallengeTypes
        noSecurity: false
        needAuth: true
        needFound: false
        needPermission: true
        needReqBody: true
        needReqBodyRef: true
        refReqEntity: ChallengeTypeData
        needResponseRef: true
        refResponseEntity: ChallengeType
        needResponsePageHeader: false
        noResponseContent: false
    - path: /challengeAuditLogs
      ops:
      - method: get
        operationId: findAllChallengeAuditLogs
        tag: AuditLog
        noSecurity: false
        needAuth: true
        needFound: false
        needPermission: true
        queryParams:
          - name: challengeId
          - name: createdStartDate
          - name: createdEndDate
          - name: createdBy
        needReqBody: false
        needReqBodyRef: false
        isList: true
        needNavPage: true
        needResponseRef: true
        refResponseEntity: AuditLogEntry
        needResponsePageHeader: true
        noResponseContent: false
    - path: /challenges/{id}
      ops:
      - method: get
        tag: Challenge
        operationId: findChallengeById
        operationName: FindChallengeById
        noSecurity: false
        needAuth: true
        needFound: true
        needPermission: false
        pathParams:
          - name: challengeId
        needReqBody: false
        needReqBodyRef: false
        needResponseRef: true
        refResponseEntity: Challenge
        needResponsePageHeader: false
        noResponseContent: false
      - method: put
        operationId: updateChallenge
        operationName: UpdateChallenge
        tag: challenge
        noSecurity: false
        needAuth: true
        needFound: true
        needPermission: true
        pathParams:
          - name: challengeId
        needReqBody: true
        needReqBodyRef: true
        refReqEntity: ChallengeData
        needResponseRef: true
        refResponseEntity: Challenge
        needResponsePageHeader: false
        noResponseContent: false
      - method: patch
        operationId: partialUpdateChallenge
        tag: challenge
        noSecurity: false
        needAuth: true
        needFound: true
        needPermission: true
        pathParams:
          - name: challengeId
        needReqBody: true
        needReqBodyRef: true
        refReqEntity: ChallengeData
        needResponseRef: true
        refResponseEntity: Challenge
        needResponsePageHeader: false
        noResponseContent: false
    - path: /challenges
      ops:
      - method: get
        tag: challenge
        operationId: findChallenges
        operationName: FindChallenges
        noSecurity: false
        needAuth: true
        needFound: false
        needPermission: false
        queryParams:
          - name: name
          - name: description
          - name: createdDateStart
          - name: createdDateEnd
          - name: updatedDateStart
          - name: updatedDateEnd
          - name: createdBy
        needReqBody: false
        needReqBodyRef: false
        isList: true
        needNavPage: true
        needResponseRef: true
        refResponseEntity: Challenge
        needResponsePageHeader: true
        noResponseContent: false
      - method: post
        operationId: createChallenge
        operationName: CreateChallenge
        tag: challenge
        noSecurity: false
        needAuth: true
        needFound: false
        needPermission: true
        needReqBody: true
        needReqBodyRef: true
        refReqEntity: ChallengeData
        needResponseRef: true
        refResponseEntity: Challenge
        needResponsePageHeader: false
        noResponseContent: false
  schemas:
    - entity: ChallengeSettingData
      entityParams:
        - name: type
        - name: value
    - entity: ChallengeType
      isGetReturn: true
      returnRef: ChallengeTypeData
    - entity: ChallengeTypeData
      entityParams:
        - name: name
        - name: description
        - name: isActive
    - entity: Challenge
      isGetReturn: true
      returnRef: ChallengeData
    - entity: ChallengeData
      entityParams:
        - name: legacyId_number
        - name: typeId_str
        - name: track
        - name: name
        - name: description
        - name: challengeSettingsData_ref_array
        - name: created_time
        - name: updated_time
        - name: createdBy
        - name: updatedBy
    - entity: ChallengeAuditLog
      entityParams:
        - name: id
        - name: challengeId
        - name: fieldName
        - name: oldValue
        - name: newValue
        - name: created_time
        - name: createdBy
    - entity: Setting
      isGetReturn: true
      returnRef: SettingData
    - entity: SettingData
      entityParams:
        - name: id
        - name: name
